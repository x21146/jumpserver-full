networks:
  default:
    name: jumpserver

services:
  proxy:
    image: nginx:1.25-alpine
    container_name: jms_proxy
    hostname: proxy
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAINS: $DOMAINS
      TZ: Asia/Taipei

  certbot:
    image: certbot
    container_name: jms_certbot
    hostname: certbot
    volumes:
      - ./ssl:/etc/letsencrypt
    environment:
      WAIT_TIME: ${WAIT_TIME:-86400}
      DOMAINS: $DOMAINS
      EMAIL: $EMAIL
      TZ: Asia/Taipei

  mysql:
    image: mysql:8
    container_name: jms_mysql
    hostname: mysql
    restart: on-failure
    volumes:
      - ${VOLUME_DIR}/mysql/data:/var/lib/mysql
      - ${VOLUME_DIR}/mysql/logs:/var/logs/mysql
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD
      TZ: Asia/Taipei

  redis:
    image: redis:7.2.2-alpine
    container_name: jms_redis
    hostname: redis
    restart: on-failure
    volumes:
      - ${VOLUME_DIR}/redis:/data
    environment:
      TZ: Asia/Taipei

  core:
    image: jumpserver/jms_core:${VERSION}
    container_name: jms_core
    ulimits:
      core: 0
    restart: always
    command: start web
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      SECRET_KEY: $SECRET_KEY
      BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN
      LOG_LEVEL: $LOG_LEVEL
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
      REDIS_PASSWORD: $REDIS_PASSWORD
      MAGNUS_PORT: ${MAGNUS_PORT:-30000-30020}
      DOMAINS: ${DOMAINS:-}
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: "check http://localhost:8080/api/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    volumes:
      - ${VOLUME_DIR}/core/data:/opt/jumpserver/data

  celery:
    image: jumpserver/jms_core:${VERSION}
    container_name: jms_celery
    ulimits:
      core: 0
    restart: always
    command: start task
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      SECRET_KEY: $SECRET_KEY
      BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN
      LOG_LEVEL: $LOG_LEVEL
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
      REDIS_PASSWORD: $REDIS_PASSWORD
      MAGNUS_PORT: ${MAGNUS_PORT:-30000-30020}
      DOMAINS: ${DOMAINS:-}
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "bash /opt/jumpserver/utils/check_celery.sh"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - ${VOLUME_DIR}/core/data:/opt/jumpserver/data

  koko:
    image: jumpserver/jms_koko:${VERSION}
    container_name: jms_koko
    ulimits:
      core: 0
    restart: always
    privileged: true
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      CORE_HOST: http://core:8080
      BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN
      LOG_LEVEL: $LOG_LEVEL
      SSHD_PORT: ${SSH_PORT:-2222}
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "check http://localhost:5000/koko/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ${VOLUME_DIR}/koko/data:/opt/koko/data
    ports:
      - ${SSH_PORT:-2222}:${SSH_PORT}

  lion:
    image: jumpserver/jms_lion:${VERSION}
    container_name: jms_lion
    ulimits:
      core: 0
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      CORE_HOST: http://core:8080
      BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN
      LOG_LEVEL: $LOG_LEVEL
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "check http://localhost:8081/lion/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ${VOLUME_DIR}/lion/data:/opt/lion/data

  magnus:
    image: jumpserver/jms_magnus:${VERSION}
    container_name: jms_magnus
    ulimits:
      core: 0
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      CORE_HOST: http://core:8080
      BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN
      LOG_LEVEL: $LOG_LEVEL
      MAGNUS_MYSQL_PORT: ${MAGNUS_MYSQL_PORT:-33061}
      MAGNUS_MARIADB_PORT: ${MAGNUS_MARIADB_PORT:-33062}
      MAGNUS_REDIS_PORT: ${MAGNUS_REDIS_PORT:-63790}
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "check tcp://localhost:$$MAGNUS_MYSQL_PORT"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ${VOLUME_DIR}/magnus/data:/opt/magnus/data
    ports:
      - ${MAGNUS_MYSQL_PORT:-33061}:33061
      - ${MAGNUS_MARIADB_PORT:-33062}:33062
      - ${MAGNUS_REDIS_PORT:-63790}:63790

  chen:
    image: jumpserver/jms_chen:${VERSION}
    container_name: jms_chen
    ulimits:
      core: 0
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      CORE_HOST: http://core:8080
      BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN
      LOG_LEVEL: $LOG_LEVEL
    volumes:
      - ${VOLUME_DIR}/chen/data:/opt/chen/data
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "check http://localhost:8082/chen/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

  kael:
    image: jumpserver/jms_kael:${VERSION}
    container_name: jms_kael
    ulimits:
      core: 0
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      CORE_HOST: http://core:8080
      BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN
      LOG_LEVEL: $LOG_LEVEL
    volumes:
      - ${VOLUME_DIR}/kael/data:/opt/kael/data
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "check http://localhost:8083/kael/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

  web:
    image: jumpserver/jms_web:${VERSION}
    container_name: jms_web
    hostname: web
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      CORE_HOST: http://core:8080
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "check http://localhost/api/health/"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ${VOLUME_DIR}/core/data:/opt/jumpserver/data
      - ${VOLUME_DIR}/web/data/logs:/var/log/nginx
      - ${VOLUME_DIR}/web/download:/opt/download
#    ports:
#      - ${HTTP_PORT:-80}:80
